name: Validate and stage release

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: The version to publish
        required: true
      publish-website:
        description: 'Create draft Website release'
        default: true
        type: boolean 
      publish-github:
        description: 'Create draft GitHub release'
        default: true
        type: boolean
      publish-maven:
        description: 'Create Maven release'
        default: true
        type: boolean
      trigger-tests:
        description: 'Trigger integration tests'
        default: true
        type: boolean
      skip-validation:
        description: 'Skip version validations'
        default: false
        type: boolean

jobs:
  stage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup release
        uses: MOEAFramework/.github/actions/setup-release@main
        with:
          email: ${{ secrets.EMAIL }}
          username: ${{ secrets.USERNAME }}
          github-pat: ${{ secrets.PAT }}
          gpg-signing-key: ${{ secrets.GPG_SIGNING_KEY }}
      - name: Get project info
        uses: MOEAFramework/.github/actions/get-project-info@main
        with:
          skip-validation: ${{ inputs.skip-validation }}
      - name: Build release artifacts
        if: ${{ inputs.publish-github }}
        run: |
          ant package-binary
          ant package-demo
          ant package-source
      - name: Generate release notes
        if: ${{ inputs.publish-github }}
        run: |
          cat docs/releaseNotes.md | awk '/## Version ${{ inputs.version }}/{flag=1; next} /##/{flag=0} flag' > dist/releaseNotes.md
          [ "$(wc -l < dist/releaseNotes.md)" -gt 0 ] || (>&2 echo "Unable to read release notes from docs/releaseNotes.md"; exit -1)
      - name: Prepare Maven
        if: ${{ inputs.publish-maven }}
        run: |
          ant build-maven
      - name: Build and stage Maven artifacts
        if: ${{ inputs.publish-maven }}
        uses: MOEAFramework/.github/actions/publish-maven@main
        with:
          directory: build
          ossrh-username: ${{ secrets.OSSRH_USERNAME }}
          ossrh-password: ${{ secrets.OSSRH_TOKEN }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Stage GitHub release
        if: ${{ inputs.publish-github }}
        uses: MOEAFramework/.github/actions/publish-github@main
        with:
          github-pat: ${{ secrets.GITHUB_TOKEN }}
      - name: Stage website
        if: ${{ inputs.publish-website }}
        run: |
          ant package-website
          
          pushd ..
          gh repo clone MOEAFramework/Website
          pushd Website
          git checkout v${{ inputs.version }} || git checkout -b v${{ inputs.version }}
          
          rm -rf *
          cp -R ../MOEAFramework/build/* .
          
          git add .
          
          if [[ -n "$(git status -s)" ]]; then
            git commit -m "Update for v${{ inputs.version }}"
            git push origin v${{ inputs.version }}
            gh pr create --head v${{ inputs.version }} --fill --repo MOEAFramework/Website || true
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      - name: Trigger integration tests
        uses: MOEAFramework/.github/actions/integration-test@main
        with:
          github-pat: ${{ secrets.PAT }}
